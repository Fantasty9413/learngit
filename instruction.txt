
将URL中的.com改为.githistory.xyz可以查看代码history

github searching instruction
in:name xxx (stars:>5000 forks:>3000)
in:readme xxx
in:description xxx (language:python)


pwd					————显示当前文件夹路径(print working directory)
mv[原文件] [原目录] [目标目录]		————移动文件(move)
mkdir /xxx/xxxx		————创建目录

git --help			————help

reset				————git bash清屏

cd g:				————改变目录(change directory)
cd g:/xxx			————使用/  当文件名含有空格或者-时，用""将文件名括起
cd /g/xxx
cd ..				————向上一级目录，可以加/返回多级目录
cd ~				————回到home目录
cd L*				————可以不将文件名打全（任何时候需要输入文件名或者目录名时都可以用）

git init			————创建本地仓库

git add filename	————添加文件至暂存区
git commit -m “..."	————添加暂存区文件进仓库

git log				————查看历史记录
git reflog			————查看所有历史（可到未来）
git log <file>		————查看对应文件的历史（不带<>和“”也行）

git ls-files		————查看仓库里存的文件(list) ls单独使用可以列出目录下的文件
git status			————查看暂存区的文件
cat filename		————打开文件

git reset --hard HEAD^		————回退上一个版本
git reset --hard 版本号		————回退到某一版本
git reset HEAD filename		————将暂存区的修改撤销掉，放回工作区

git diff filename			————查看文件的修改
git diff HEAD -- filename	————查看最新版和工作区版本的区别

git restore filename		————放弃工作区的修改，回到暂存区或者版本库的版本

rm filename 				————删除文件
git checkout --filename		————从版本库恢复文件到工作区
git rm filename				————版本库的删除操作，和add相反，也需要commit，也可以从暂存区撤销

git push origin master		————上传master分支，带上-u上传所有分支
git pull origin master		————从远程仓库下载更新master

git clone git@github.com:xxx/xxx.git		——————从远程仓库克隆
git remote add origin git@github.com:xxx/xxx.git		————将本地仓库和远程仓库关联

exit		————退出窗口

git branch					————查看分支
git branch <name>			————创建分支
git switch <name>			————切换分支
git branch -d <name>		————删除分支
git merge <name>			————合并分支

git rm <file>				————将文件从暂存区和工作区中删除
git rm -f <file>			————强制删除（对于已经修改过然后放在暂存区的文件）
git add -u					————添加处理已修改或者已删除的文件，但是不会处理新建的文件

git rm --cached <file>		————从暂存区删除，任然保留在工作目录中（即只从跟踪清单中删除）

del file <file>				————命令行的删除命令，只从工作目录中删除，保存其在暂存区的存档

git mv [file] [newfile]			————更改文件夹名称

git learning： https://pcottle.github.io/learnGitBranching/